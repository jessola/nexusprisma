### This file was generated by Nexus Schema
### Do not make changes to this file directly


"""Useful methods to filter by String fields"""
input BooleanFilter {
  equals: Boolean
  not: BooleanFilter
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

"""Useful methods to filter by Int fields"""
input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: IntFilter
  notIn: [Int!]
}

type LoginResponse {
  success: Boolean!
  token: String
  user: User
}

input LoginUserInput {
  email: String!
  password: String!
}

type MeResponse {
  token: String
  user: User
}

type Mutation {
  loginUser(input: LoginUserInput!): LoginResponse!
  logoutUser: Boolean!
  registerUser(input: RegisterUserInput!): RegisterResponse!
}

enum OrderByArg {
  asc
  desc
}

type Query {
  me: User
  user(where: UserWhereUniqueInput!): User
  users(orderBy: [UserOrderByInput!], skip: Int, take: Int, where: UserWhereInput): [User!]!
}

type RegisterResponse {
  success: Boolean!
  token: String
  user: User
}

input RegisterUserInput {
  email: String!
  firstName: String!
  lastName: String!
  password: String!
}

"""Useful methods to filter by String or DateTime fields"""
input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: StringFilter
  notIn: [String!]
  startsWith: String
}

type User {
  email: String!
  firstName: String!
  id: Int!
  joinedAt: DateTime!
  lastName: String!
  name: String!
}

input UserOrderByInput {
  email: OrderByArg
  firstName: OrderByArg
  id: OrderByArg
  joinedAt: OrderByArg
  lastName: OrderByArg
}

input UserWhereInput {
  AND: [UserWhereInput!]
  NOT: [UserWhereInput!]
  OR: [UserWhereInput!]
  email: StringFilter
  firstName: StringFilter
  id: IntFilter
  joinedAt: StringFilter
  lastName: StringFilter
}

input UserWhereUniqueInput {
  email: String
  id: Int
}
